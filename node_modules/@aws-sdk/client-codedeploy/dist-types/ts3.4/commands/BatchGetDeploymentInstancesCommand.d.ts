import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CodeDeployClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CodeDeployClient";
import {
  BatchGetDeploymentInstancesInput,
  BatchGetDeploymentInstancesOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface BatchGetDeploymentInstancesCommandInput
  extends BatchGetDeploymentInstancesInput {}
export interface BatchGetDeploymentInstancesCommandOutput
  extends BatchGetDeploymentInstancesOutput,
    __MetadataBearer {}
export declare class BatchGetDeploymentInstancesCommand extends $Command<
  BatchGetDeploymentInstancesCommandInput,
  BatchGetDeploymentInstancesCommandOutput,
  CodeDeployClientResolvedConfig
> {
  readonly input: BatchGetDeploymentInstancesCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: BatchGetDeploymentInstancesCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CodeDeployClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    BatchGetDeploymentInstancesCommandInput,
    BatchGetDeploymentInstancesCommandOutput
  >;
  private serialize;
  private deserialize;
}
