import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CodeDeployClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CodeDeployClient";
import {
  CreateDeploymentInput,
  CreateDeploymentOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateDeploymentCommandInput extends CreateDeploymentInput {}
export interface CreateDeploymentCommandOutput
  extends CreateDeploymentOutput,
    __MetadataBearer {}
export declare class CreateDeploymentCommand extends $Command<
  CreateDeploymentCommandInput,
  CreateDeploymentCommandOutput,
  CodeDeployClientResolvedConfig
> {
  readonly input: CreateDeploymentCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateDeploymentCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CodeDeployClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateDeploymentCommandInput, CreateDeploymentCommandOutput>;
  private serialize;
  private deserialize;
}
