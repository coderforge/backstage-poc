import * as _backstage_core_components from '@backstage/core-components';
import * as _backstage_core_plugin_api from '@backstage/core-plugin-api';
import { Entity } from '@backstage/catalog-model';
import { GetPipelineStateOutput, PipelineExecutionSummary } from '@aws-sdk/client-codepipeline';
import { BatchGetProjectsCommandOutput, Build } from '@aws-sdk/client-codebuild';
import { BatchGetDeploymentGroupsCommandOutput, BatchGetDeploymentsCommandOutput } from '@aws-sdk/client-codedeploy';

/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
declare const rootRouteRef: _backstage_core_plugin_api.RouteRef<undefined>;
declare const codeServicesPlugin: _backstage_core_plugin_api.BackstagePlugin<{
    entityContent: _backstage_core_plugin_api.RouteRef<undefined>;
}, {}, {}>;
declare const EntityAWSCodeBuildProjectOverviewCard: ({ variant, buildHistoryLength, }: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    buildHistoryLength?: number | undefined;
}) => JSX.Element;
declare const EntityAWSCodeDeployDeploymentGroupOverviewCard: ({ variant, deploymentHistoryLength, }: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    deploymentHistoryLength?: number | undefined;
}) => JSX.Element;
declare const EntityAWSCodePipelineOverviewCard: ({ variant, }: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
}) => JSX.Element;
declare const EntityAWSCodePipelineContent: () => JSX.Element;

/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare const isAWSCodeBuildProjectAvailable: (entity: Entity) => boolean;
declare const isAWSCodeDeployDeploymentGroupAvailable: (entity: Entity) => boolean;
declare const isAWSCodePipelineAvailable: (entity: Entity) => boolean;

declare const awsCodePipelineApiRef: _backstage_core_plugin_api.ApiRef<AwsCodePipelineApi>;
interface AwsCodePipelineApi {
    getPipelineState({ arn }: {
        arn: string;
    }): Promise<GetPipelineStateOutput>;
    listPipelineExecutions({ arn, }: {
        arn: string;
    }): Promise<PipelineExecutionSummary[]>;
}

declare const awsCodeBuildApiRef: _backstage_core_plugin_api.ApiRef<AwsCodeBuildApi>;
interface AwsCodeBuildApi {
    getProject({ arn }: {
        arn: string;
    }): Promise<BatchGetProjectsCommandOutput>;
    listBuilds({ arn }: {
        arn: string;
    }): Promise<Build[]>;
}

declare const awsCodeDeployApiRef: _backstage_core_plugin_api.ApiRef<AwsCodeDeployApi>;
interface AwsCodeDeployApi {
    getDeploymentGroup({ arn, }: {
        arn: string;
    }): Promise<BatchGetDeploymentGroupsCommandOutput>;
    getDeployments({ arn, }: {
        arn: string;
    }): Promise<BatchGetDeploymentsCommandOutput>;
}

export { AwsCodeBuildApi, AwsCodeDeployApi, AwsCodePipelineApi, EntityAWSCodeBuildProjectOverviewCard, EntityAWSCodeDeployDeploymentGroupOverviewCard, EntityAWSCodePipelineContent, EntityAWSCodePipelineOverviewCard, awsCodeBuildApiRef, awsCodeDeployApiRef, awsCodePipelineApiRef, codeServicesPlugin, isAWSCodeBuildProjectAvailable, isAWSCodeDeployDeploymentGroupAvailable, isAWSCodePipelineAvailable, rootRouteRef };
